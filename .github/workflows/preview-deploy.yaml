name: Preview Environment - Frontend

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
      - develop

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: "frontend/package-lock.json"

      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build Frontend
        working-directory: ./frontend
        run: npm run build

      - name: Upload Frontend Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: |
            frontend/out/
          retention-days: 1

  # プレビュー環境のビルド・デプロイ
  build_and_deploy_preview:
    needs: [build-frontend]
    # feature ブランチのPRのみ対象
    if: github.event.action != 'closed' && startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-22.04
    name: Build and Deploy Preview Environment
    environment: production
    env:
      APP_LOCATION: ${{ vars.APP_LOCATION || 'deploy/frontend' }}
      OUTPUT_LOCATION: ${{ vars.OUTPUT_LOCATION || '.' }}
      API_LOCATION: ${{ vars.API_LOCATION || 'api' }}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Build And Deploy Preview
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/frontend"
          api_location: "api"
          output_location: "out"
          # プレビュー環境として作成（deployment_environment を指定しない場合、PRベースの環境が作成される）

      - name: Comment preview URL
        uses: actions/github-script@v6
        if: github.event.action == 'opened'
        with:
          script: |
            const deploymentUrl = '${{ steps.builddeploy.outputs.static_web_app_url }}';
            const comment = `## 🚀 Preview Environment Ready!

            Your preview environment has been deployed successfully!

            **Preview URL:** ${deploymentUrl}

            This environment will be automatically updated when you push new commits to this PR and deleted when the PR is closed.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # プレビュー環境のクリーンアップ
  cleanup_preview:
    # PRクローズ時かつfeatureブランチの場合のみ
    if: github.event.action == 'closed' && startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-22.04
    name: Cleanup Preview Environment
    environment: production
    steps:
      - name: Close Preview Environment
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"
          app_location: "/frontend"

      - name: Comment cleanup confirmation
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `## 🧹 Preview Environment Cleaned Up

            The preview environment for this PR has been successfully deleted.

            Thank you for your contribution! 🎉`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  # プレビュー環境の制限チェック（オプション）
  check_preview_limits:
    if: github.event.action == 'opened' && startsWith(github.head_ref, 'feature/')
    runs-on: ubuntu-22.04
    name: Check Preview Environment Limits
    steps:
      - name: Check active preview environments
        uses: actions/github-script@v6
        with:
          script: |
            // 現在のアクティブなPR数をチェック
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: 'feature/'
            });

            const featurePRs = prs.filter(pr => pr.head.ref.startsWith('feature/'));
            const count = featurePRs.length;

            console.log(`Current active feature PRs: ${count}`);

            if (count > 8) {
              const warning = `⚠️ **Warning**: Currently ${count} feature PRs are active.
              
              Azure Static Web Apps limits preview environments to 10 (Standard plan) or 3 (Free plan).
              Consider merging or closing some PRs to avoid hitting the limit.
              
              Active feature PRs:
              ${featurePRs.map(pr => `- #${pr.number}: ${pr.title}`).join('\n')}`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: warning
              });
            }
